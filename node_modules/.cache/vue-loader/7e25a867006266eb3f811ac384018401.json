{"remainingRequest":"F:\\xamp\\htdocs\\practicevue\\copyvrent6\\vlogin2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\xamp\\htdocs\\practicevue\\copyvrent6\\vlogin2\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!F:\\xamp\\htdocs\\practicevue\\copyvrent6\\vlogin2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\xamp\\htdocs\\practicevue\\copyvrent6\\vlogin2\\src\\views\\Basic.vue?vue&type=template&id=23a25938&scoped=true&","dependencies":[{"path":"F:\\xamp\\htdocs\\practicevue\\copyvrent6\\vlogin2\\src\\views\\Basic.vue","mtime":1637551196374},{"path":"F:\\xamp\\htdocs\\practicevue\\copyvrent6\\vlogin2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\xamp\\htdocs\\practicevue\\copyvrent6\\vlogin2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\xamp\\htdocs\\practicevue\\copyvrent6\\vlogin2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\xamp\\htdocs\\practicevue\\copyvrent6\\vlogin2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}